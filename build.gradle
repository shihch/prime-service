version = '1.0'

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
	}
}

apply plugin: 'eclipse'
apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
	//compile 'org.scala-lang:scala-library:2.11.8'
	
	compile group: 'com.typesafe.akka', name: 'akka-http_2.11', version: '10.1.0'
	compile group: 'com.typesafe.akka', name: 'akka-http-spray-json_2.11', version: '10.1.0'
	
	compile group: 'com.typesafe.akka', name: 'akka-stream_2.11', version: '2.5.11'
	compile group: 'com.typesafe.akka', name: 'akka-actor_2.11', version: '2.5.11'
	compile group: 'com.typesafe.scala-logging', name: 'scala-logging_2.11', version: '3.7.2'
	compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
	
	testCompile group: 'junit', name: 'junit', version: '4.+'
	testCompile group: 'org.scalatest', name: 'scalatest_2.11', version: '3.0.5'
	testCompile group: 'com.typesafe.akka', name: 'akka-testkit_2.11', version: '2.5.11'
	testCompile group: 'com.typesafe.akka', name: 'akka-stream-testkit_2.11', version:'2.5.11'
	testCompile group: 'com.typesafe.akka', name: 'akka-http-testkit_2.11', version:'10.1.0'
    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
}
mainClassName="org.clark.PrimeService"

def jar_name= "prime-service"
jar {
	baseName = "${jar_name}"
	classifier = null
	version = null
	manifest {
		attributes 'Implementation-Title': 'akka http web service',
				'Implementation-Version': project.version,
				'Main-Class': 'org.clark.PrimeService'
	}
}
shadowJar {
	baseName = "${jar_name}"
	classifier = null
	version = null
	manifest {
		attributes 'Implementation-Title': 'akka http web service',
				'Implementation-Version': project.version,
				'Main-Class': 'org.clark.PrimeService'
	}
	transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) {
		resource = 'reference.conf'
	}
}

task runJar(type: JavaExec, dependsOn: shadowJar) {
	//classpath sourceSets.main.runtimeClasspath
	//classpath configurations.runtime
	main = '-jar'  
	// arguments to pass to the application
	args "build/libs/${jar_name}.jar"
}

task spec(dependsOn: ['testClasses'], type: JavaExec) {
	main = 'org.scalatest.tools.Runner'
	args = ['-R', 'build/classes/test', '-o']
	classpath = sourceSets.test.runtimeClasspath
}

test.dependsOn spec

